#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>

int luhn(const char* cc) {
    const int m[] = {0, 2, 4, 6, 8, 1, 3, 5, 7, 9};
    int i, odd = 1, sum = 0;
    for (i = strlen(cc); i--; odd = !odd) {
        int digit = cc[i] - '0';
        sum += odd ? digit : m[digit];
    }
    return sum % 10 == 0;
}

const char* get_company(const char* cc) {
    unsigned long long tmp = atoll(cc);
    unsigned int count = strlen(cc);

    while (tmp > 100LL) {
        tmp /= 10LL;
    }
    if (tmp >= 51 && tmp <= 55 && count == 16) {
        return "MASTERCARD";
    } else if ((tmp == 34 || tmp == 37) && count == 15) {
        return "AMEX";
    } else if ((tmp / 10 == 4) && (count == 13 || count == 16 || count == 19)) {
        return "VISA";
    } else {
        return "UNKNOWN";
    }
}

void cc_validation(void) {
    char iccn[1024];
    char company[128];
    int valid;
    char occn[17];

    printf("ICARD Credit Card Validation Tool v3.0\n");
    printf("Enter up to 16-digit credit card number:\n");
    if (fgets(iccn, sizeof(iccn), stdin)) {
        size_t len = strlen(iccn);
        if (iccn[len - 1] == '\n') {
            iccn[len - 1] = '\0'; // Remove newline character
        }

        // Check if the input is all digits and has a valid length
        if (len < 13 || len > 16 || strspn(iccn, "0123456789") != strlen(iccn)) {
            printf("Invalid input. Please enter a 13 to 16-digit number.\n");
            return;
        }

        strncpy(company, get_company(iccn), sizeof(company) - 1);
        company[sizeof(company) - 1] = '\0'; // Null-terminate

        valid = luhn(iccn);
        strncpy(occn, iccn, sizeof(occn) - 1);
        occn[sizeof(occn) - 1] = '\0'; // Null-terminate

        printf("Credit card number: %s\n", occn);
        printf("Credit card company: %s\n", company);
        printf("Credit card valid: %s\n", valid ? "1 (valid)" : "0 (not valid)");
    }
}

int main(int argc, char **argv) {
    cc_validation();
    return 0;
}
